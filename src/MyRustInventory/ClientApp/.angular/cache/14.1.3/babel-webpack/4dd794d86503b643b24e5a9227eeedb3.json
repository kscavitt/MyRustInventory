{"ast":null,"code":"import _asyncToGenerator from \"C:/Dev/repos/MyRustInventory/MyRustInventory/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate, __param } from \"tslib\";\nimport { Inject } from '@angular/core';\nimport { setTimeout } from 'timers/promises';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\n\nfunction FetchDataComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction FetchDataComponent_table_3_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵelement(8, \"img\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.classid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.marketHashName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", item_r3.iconUrl, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r3.lowestPrice);\n  }\n}\n\nfunction FetchDataComponent_table_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"ClassId\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"MHN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Lowest Price\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, FetchDataComponent_table_3_tr_14_Template, 11, 5, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.rustItems.inventoryItems);\n  }\n}\n\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    var _this = this;\n\n    this.forecasts = [];\n    this.rustItems = {};\n    this.tradeables = [];\n    http.get(baseUrl + 'Steam/GetInventory').subscribe( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (result) {\n        var _a, _b;\n\n        _this.rustItems = result;\n\n        if (_this.rustItems.inventoryItems) {\n          //http.get<MarketDataResponse>(baseUrl + 'Steam/GetMarketData/' + encodeURI(mhn) + '/1').subscribe(result => {\n          //  let marketData = result;\n          //  if (this.rustItems.inventoryItems) {\n          //    this.rustItems.inventoryItems[0].lowestPrice = marketData.lowest_Price;\n          //  }\n          //  console.log(marketData);\n          //}, error => console.error(error));\n          for (var i = 0; i < _this.rustItems.inventoryItems.length - 1; i++) {\n            yield setTimeout(5000);\n\n            if (_this.rustItems.inventoryItems[i].tradable) {\n              let mhn = (_a = _this.rustItems.inventoryItems[i].marketHashName) !== null && _a !== void 0 ? _a : '';\n              console.log('getting market details');\n              let url = baseUrl + 'Steam/GetMarketData/' + encodeURI(mhn) + '/1';\n              http.get(url).subscribe(result => {\n                let marketData = result;\n                console.log('found market details for ' + mhn + ' lowest price = ' + marketData.lowest_Price);\n\n                if (_this.rustItems.inventoryItems) {\n                  _this.rustItems.inventoryItems[i].lowestPrice = marketData.lowest_Price;\n                  console.log('set price data to  ' + _this.rustItems.inventoryItems[i].lowestPrice);\n                }\n              }, error => console.error(error));\n\n              _this.tradeables.push((_b = _this.rustItems.inventoryItems[i].name) !== null && _b !== void 0 ? _b : \"\");\n            } else {\n              _this.rustItems.inventoryItems[i].lowestPrice = '--';\n            }\n          }\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(), error => console.error(error));\n    console.log(this.tradeables);\n  }\n\n  getMarketData(baseUrl) {}\n\n}\n\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\n\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 4,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [3, \"src\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Rust Inventory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, FetchDataComponent_p_2_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(3, FetchDataComponent_table_3_Template, 15, 1, \"table\", 2);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.rustItems.inventoryItems == null ? null : ctx.rustItems.inventoryItems.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.rustItems.inventoryItems == null ? null : ctx.rustItems.inventoryItems.length);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});\n\n__decorate([__param(0, Inject('BASE_URL'))], FetchDataComponent.prototype, \"getMarketData\", null);","map":{"version":3,"mappings":"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","names":["Inject","setTimeout","i0","FetchDataComponent","constructor","http","baseUrl","get","subscribe","result","rustItems","inventoryItems","i","length","tradable","mhn","marketHashName","_a","console","log","url","encodeURI","marketData","lowest_Price","lowestPrice","error","tradeables","push","name","_b","getMarketData","selectors","decls","vars","consts","template","__decorate","__param"],"sourceRoot":"","sources":["C:\\Dev\\repos\\MyRustInventory\\MyRustInventory\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts","C:\\Dev\\repos\\MyRustInventory\\MyRustInventory\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { delay } from \"rxjs/operators\";\r\nimport { setTimeout } from 'timers/promises';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public forecasts: WeatherForecast[] = [];\r\n  public rustItems: RustItemsResponse = <RustItemsResponse>{};\r\n  public tradeables: Array<string> = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n\r\n    http.get<RustItemsResponse>(baseUrl + 'Steam/GetInventory').subscribe(async result => {\r\n      this.rustItems = result;\r\n\r\n      if (this.rustItems.inventoryItems) {\r\n\r\n        //http.get<MarketDataResponse>(baseUrl + 'Steam/GetMarketData/' + encodeURI(mhn) + '/1').subscribe(result => {\r\n        //  let marketData = result;\r\n        //  if (this.rustItems.inventoryItems) {\r\n        //    this.rustItems.inventoryItems[0].lowestPrice = marketData.lowest_Price;\r\n        //  }\r\n        //  console.log(marketData);\r\n        //}, error => console.error(error));\r\n        for (var i = 0; i < this.rustItems.inventoryItems.length - 1; i++) {\r\n\r\n          await setTimeout(5000);\r\n\r\n          if (this.rustItems.inventoryItems[i].tradable) {\r\n            let mhn = this.rustItems.inventoryItems[i].marketHashName ?? '';\r\n            console.log('getting market details');\r\n            let url = baseUrl + 'Steam/GetMarketData/' + encodeURI(mhn) + '/1';\r\n            http.get<MarketDataResponse>(url).subscribe(result => {\r\n\r\n              let marketData = result;\r\n              console.log('found market details for ' + mhn + ' lowest price = ' + marketData.lowest_Price);\r\n              if (this.rustItems.inventoryItems) {\r\n                this.rustItems.inventoryItems[i].lowestPrice = marketData.lowest_Price;\r\n                console.log('set price data to  ' + this.rustItems.inventoryItems[i].lowestPrice);\r\n              }\r\n\r\n            }, error => console.error(error));\r\n            this.tradeables.push(this.rustItems.inventoryItems[i].name ?? \"\")\r\n          }\r\n          else {\r\n            this.rustItems.inventoryItems[i].lowestPrice = '--';\r\n          }\r\n\r\n        }\r\n      }\r\n    }, error => console.error(error));\r\n\r\n    console.log(this.tradeables);\r\n  }\r\n  getMarketData(@Inject('BASE_URL') baseUrl: string) {\r\n\r\n  }\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n\r\n\r\ninterface RustItemsResponse {\r\n  inventoryItems: RustItemDto[] | null;\r\n}\r\n\r\n interface RustItemDto {\r\n  classid: string | null;\r\n  backgroundColor: string | null;\r\n  iconUrl: string | null;\r\n  iconUrlLarge: string | null;\r\n  description: string | null;\r\n  tradable: number | null;\r\n  name: string | null;\r\n  nameColor: string | null;\r\n  type: string | null;\r\n  marketName: string | null;\r\n  commodity: number | null;\r\n  marketTradableRestriction: number | null;\r\n  marketMarketableRestriction: number | null;\r\n  marketable: number | null;\r\n  tags: Tag[] | null;\r\n  amount: string | null;\r\n  assetid: string | null;\r\n  marketHashName: string | null;\r\n  lowestPrice: string | null;\r\n}\r\n\r\n  interface Tag {\r\n  category: string | null;\r\n  internal_Name: string | null;\r\n  localized_Category_Name: string | null;\r\n  localized_Tag_Name: string | null;\r\n}\r\n\r\n interface MarketDataResponse {\r\n  assetId: string | null;\r\n  success: boolean | null;\r\n  lowest_Price: string | null;\r\n  volume: string | null;\r\n  median_Price: string | null;\r\n}\r\n","<h1 id=\"tableLabel\">Rust Inventory</h1>\r\n\r\n<p *ngIf=\"!rustItems.inventoryItems?.length\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"rustItems.inventoryItems?.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>ClassId</th>\r\n      <th>Name</th>\r\n      <th>MHN</th>\r\n      <th>Image</th>\r\n      <th>Lowest Price</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let item of rustItems.inventoryItems\">\r\n      <td>{{ item.classid }}</td>\r\n      <td>{{ item.name }}</td>\r\n      <td>{{ item.marketHashName }}</td>\r\n      <td><img [src]=\"item.iconUrl\"></td>\r\n      <td>{{ item.lowestPrice }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module"}